{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"innerHTML\"];\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", {\n    innerHTML: _ctx.question\n  }, null, 8 /* PROPS */, _hoisted_1), _ctx.answers ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.answers, (answer, index) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      value: answer,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.chosenAns = $event)\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelRadio, _ctx.chosenAns]]), _createElementVNode(\"label\", {\n      innerHTML: answer\n    }, null, 8 /* PROPS */, _hoisted_3), _hoisted_4], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.submitAns())\n  }, \"Submit\")], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;gCAOYA,oBAAM;;;uBANdC,oBAUM,cATFD,oBAA2B;IAAvBE,SAAiB,EAATC;EAAQ,qCACJA,YAAO,kBAAvBF,oBAOWG;IAAAC;EAAA,uBANPJ,oBAIWG,6BAJuBD,YAAO,GAAxBG,MAAM,EAAEC,KAAK;;WAAmBA;IAAK,oBACtDP,oBAAwE;MAAjEQ,IAAI,EAAC,OAAO;MAACC,IAAI,EAAC,SAAS;MAAEC,KAAK,EAAEJ,MAAM;iEAAWH,cAAS;yDAATA,cAAS,KACrEH,oBAA+B;MAAxBE,SAAe,EAAPI;IAAM,qCACrBK,UAAM;kCAENX,oBAA4C;IAAnCY,OAAK,sCAAET,cAAS;KAAI,QAAM","names":["_createElementVNode","_createElementBlock","innerHTML","_ctx","_Fragment","key","answer","index","type","name","value","_hoisted_4","onClick"],"sourceRoot":"","sources":["C:\\projects\\vue-practice\\src\\components\\ApiCall.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1 v-html=\"question\"></h1>\r\n        <template v-if=\"answers\">\r\n            <template v-for=\"answer, index in answers\" :key=\"index\">\r\n            <input type=\"radio\" name=\"options\" :value=\"answer\" v-model=\"chosenAns\"/>\r\n            <label v-html=\"answer\"></label>\r\n            <br />\r\n            </template>\r\n            <button @click=\"submitAns()\">Submit</button>\r\n        </template>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'ApiCall',\r\n  data(){\r\n    return{\r\n        question: undefined,\r\n        incorrectAns: undefined,\r\n        correctAns: undefined,\r\n        chosenAns: undefined,\r\n        msg: undefined\r\n    }\r\n  },\r\n  computed:{\r\n    answers() {\r\n        let answers = this.incorrectAns && JSON.parse( JSON.stringify( this.incorrectAns ) );\r\n        this.incorrectAns && answers.splice( Math.round( Math.random() * answers.length ),0,this.correctAns);\r\n        return answers;\r\n    }\r\n  },\r\n  created(){\r\n    this.axios.get(`https://opentdb.com/api.php?amount=1&category=18`).then( (response) => {\r\n        this.question = response.data.results[0].question;\r\n        this.incorrectAns = response.data.results[0].incorrect_answers;\r\n        this.correctAns = response.data.results[0].correct_answer;\r\n    })\r\n    }, \r\n  methods:{\r\n    submitAns(){\r\n        if(this.chosenAns && this.chosenAns === this.correctAns){\r\n            this.msg = \r\n        }else{\r\n\r\n        }\r\n    }\r\n  }  \r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}