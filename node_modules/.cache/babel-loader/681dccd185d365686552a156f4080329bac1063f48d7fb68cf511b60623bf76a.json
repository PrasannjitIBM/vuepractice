{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", {\n    innerHTML: $data.question\n  }, null, 8 /* PROPS */, _hoisted_1), true ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;uBACIA,oBAGM,cAFFC,oBAA2B;IAAvBC,SAAiB,EAATC;EAAQ,qCACJ,sBAAhBH,oBAA6BI;IAAAC;EAAA","names":["_createElementBlock","_createElementVNode","innerHTML","$data","_Fragment","key"],"sourceRoot":"","sources":["C:\\projects\\vue-practice\\src\\components\\ApiCall.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1 v-html=\"question\"></h1>\r\n        <template v-if=\"\"></template>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'ApiCall',\r\n  data(){\r\n    return{\r\n        question: null,\r\n        incorrectAns: null,\r\n        correctAns: null\r\n    }\r\n  },\r\n  computed:{\r\n    answers() {\r\n        let answers = JSON.parse( JSON.stringify( this.incorrectAns ) );\r\n        answers.splice( Math.round( Math.random() * answers.length ),0,this.correctAns);\r\n        return answers;\r\n    }\r\n  },\r\n  created(){\r\n    this.axios.get(`https://opentdb.com/api.php?amount=1&category=18`).then( (response) => {\r\n        console.log( response.data.results );\r\n        this.question = response.data.results[0].question;\r\n        this.incorrectAns = response.data.results[0].incorrect_answers;\r\n        this.correctAns = response.data.results[0].correct_answer;\r\n    })\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}