{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Update\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString($props.msg) + \" \", 1 /* TEXT */), _createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todoData, (val, i) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: i\n    }, [_createElementVNode(\"td\", null, _toDisplayString(val), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"fanme\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formData.fname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.formData.fname]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.addMe())\n  }, \"Add\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAGQA,oBAKQ,6BAJJA,oBAGK,0BAFDA,oBAAa,YAAT,MAAI,gBACRA,oBAAe,YAAX,QAAM;;;+FALnBC,UAAG,IAAG,GACT,qCAYQ,gBAXJC,UAKQ,EACRF,oBAIQ,mCAHJG,oBAEKC,6BAFgBC,aAAQ,GAAlBC,GAAG,EAAEC,CAAC;yBAAjBJ,oBAEK;MAFiCK,GAAG,EAAED;IAAC,IACxCP,oBAAkB,6BAAXM,GAAG;sCAItBN,oBAGM,8BAFFA,oBAA2D;IAApDS,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,OAAO;+DAAUL,aAAQ,CAACM,KAAK;iDAAdN,aAAQ,CAACM,KAAK,KACvDX,oBAAqC;IAA5BY,OAAK,sCAAEC,cAAK;KAAI,KAAG","names":["_createElementVNode","$props","_hoisted_1","_createElementBlock","_Fragment","_ctx","val","i","key","type","name","fname","onClick","$options"],"sourceRoot":"","sources":["C:\\projects\\vue-practice\\src\\components\\TodoTemplate.vue"],"sourcesContent":["<template>\r\n    {{ msg }}\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Update</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"val, i in todoData\" v-bind:key=\"i\">\r\n                <td>{{ val }}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div>\r\n        <input type=\"text\" name=\"fanme\" v-model=\"formData.fname\" />\r\n        <button @click=\"addMe()\">Add</button>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'TodoTemplate',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data:()=>({\r\n    todoData: [],\r\n    formData: {}\r\n  }),\r\n  methods:{\r\n    addMe(){\r\n        this.formData.fname && this.todoData.push(this.formData.fname)\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}