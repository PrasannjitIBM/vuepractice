{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Update\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Delete\")])], -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString($props.msg) + \" \", 1 /* TEXT */), _createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todoData, (val, i) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: i\n    }, [_createElementVNode(\"td\", null, _toDisplayString(val), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.UpdateMe(i)\n    }, \"Update\", 8 /* PROPS */, _hoisted_2)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.DeleteMe(i)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"fanme\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formData.fname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.formData.fname]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.dataUpdation())\n  }, _toDisplayString(_ctx.updatebtn ? 'Update' : 'Add'), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAGQA,oBAMQ,6BALJA,oBAIK,0BAHDA,oBAAa,YAAT,MAAI,gBACRA,oBAAe,YAAX,QAAM,gBACVA,oBAAe,YAAX,QAAM;;;;+FANnBC,UAAG,IAAG,GACT,qCAeQ,gBAdJC,UAMQ,EACRF,oBAMQ,mCALJG,oBAIKC,6BAJgBC,aAAQ,GAAlBC,GAAG,EAAEC,CAAC;yBAAjBJ,oBAIK;MAJiCK,GAAG,EAAED;IAAC,IACxCP,oBAAkB,6BAAXM,GAAG,kBACVN,oBAAqD,aAAjDA,oBAA4C;MAAnCS,OAAK,YAAEC,iBAAQ,CAACH,CAAC;OAAG,QAAM,gCACvCP,oBAAqD,aAAjDA,oBAA4C;MAAnCS,OAAK,YAAEC,iBAAQ,CAACH,CAAC;OAAG,QAAM;sCAInDP,oBAIM,8BAHFA,oBAA2D;IAApDW,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,OAAO;+DAAUP,aAAQ,CAACQ,KAAK;iDAAdR,aAAQ,CAACQ,KAAK,KACvDb,oBAA0E;IAAjES,OAAK,sCAAEC,qBAAY;sBAAQL,cAAS","names":["_createElementVNode","$props","_hoisted_1","_createElementBlock","_Fragment","_ctx","val","i","key","onClick","$options","type","name","fname"],"sourceRoot":"","sources":["C:\\projects\\vue-practice\\src\\components\\TodoTemplate.vue"],"sourcesContent":["<template>\r\n    {{ msg }}\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Update</th>\r\n                <th>Delete</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"val, i in todoData\" v-bind:key=\"i\">\r\n                <td>{{ val }}</td>\r\n                <td><button @click=\"UpdateMe(i)\">Update</button></td>\r\n                <td><button @click=\"DeleteMe(i)\">Delete</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div>\r\n        <input type=\"text\" name=\"fanme\" v-model=\"formData.fname\" />\r\n        <button @click=\"dataUpdation()\">{{ (updatebtn)? 'Update':'Add' }}</button>\r\n        \r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'TodoTemplate',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data:()=>({\r\n    todoData: [],\r\n    formData: {},\r\n    updatebtn: false,\r\n    indexCache: null\r\n  }),\r\n  methods:{\r\n    dataUpdation(){\r\n        if(this.updatebtn){ \r\n            this.todoData[this.indexCache] = this.formData.fname;\r\n            this.updatebtn= false;\r\n        }else{\r\n            this.formData.fname && this.todoData.push(this.formData.fname);\r\n        }\r\n        this.formData = {}\r\n    },\r\n    UpdateMe( i ){\r\n     this.formData.fname = this.todoData[i];\r\n     this.updatebtn = true\r\n     this.indexCache = i;\r\n    },\r\n    DeleteMe( i ){\r\n        this.todoData.splice(i, 1);\r\n    },\r\n    beforeCreate(){\r\n        console.log(\"before created\");\r\n    },\r\n    created(){\r\n        console.log(created);\r\n    }\r\n  },\r\n  \r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}